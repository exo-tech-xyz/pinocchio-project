/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import { type ParsedInitializeInstruction } from '../instructions';

export const MYPROJECT_PROGRAM_ADDRESS =
  '2NCpU9nsgLfhqKX5CDVz24FfsZ8aRwjgUWtFbPsVZVu2' as Address<'2NCpU9nsgLfhqKX5CDVz24FfsZ8aRwjgUWtFbPsVZVu2'>;

export enum MyprojectAccount {
  Account,
}

export enum MyprojectInstruction {
  Initialize,
}

export function identifyMyprojectInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): MyprojectInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return MyprojectInstruction.Initialize;
  }
  throw new Error(
    'The provided instruction could not be identified as a myproject instruction.'
  );
}

export type ParsedMyprojectInstruction<
  TProgram extends string = '2NCpU9nsgLfhqKX5CDVz24FfsZ8aRwjgUWtFbPsVZVu2',
> = {
  instructionType: MyprojectInstruction.Initialize;
} & ParsedInitializeInstruction<TProgram>;
